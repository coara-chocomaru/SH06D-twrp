name: Recovery Build (Legacy)

on:
  workflow_dispatch:
    inputs:
      MANIFEST_URL:
        description: 'MANIFEST_URL (if want to use SSH keys, use git@github.com:XXXXX)'
        required: true
        default: 'https://github.com/minimal-manifest-twrp/platform_manifest_twrp_omni'
      MANIFEST_BRANCH:
        description: 'MANIFEST_BRANCH'
        required: true
        default: 'twrp-4.4-deprecated'
      DEVICE_TREE_URL:
        description: 'DEVICE_TREE_URL'
        required: true
        default: 'https://github.com/coara-chocomaru/SH06D-twrp'
      DEVICE_TREE_BRANCH:
        description: 'DEVICE_TREE_BRANCH'
        required: true
        default: 'main'
      DEVICE_PATH:
        description: 'DEVICE_PATH'
        required: true
        default: 'device/shrp/sh06d'
      DEVICE_NAME:
        description: 'DEVICE_NAME'
        required: true
        default: 'sh06d'
      MAKEFILE_NAME:
        description: 'MAKEFILE_NAME'
        required: true
        default: 'omni_sh06d'
      BUILD_TARGET:
        description: 'BUILD_TARGET'
        required: true
        default: 'recovery'

jobs:
  build:
    if: github.event.repository.owner.id == github.event.sender.id
    runs-on: ubuntu-latest
    container:
      image: ubuntu:20.04
    permissions:
      contents: write
    timeout-minutes: 360

    defaults:
      run:
        shell: bash -l {0}

    steps:
    - name: Display Run Parameters
      run: |
        echo "::group::User Environment Variables"
        echo "Manifest URL: ${{ github.event.inputs.MANIFEST_URL }}"
        echo "Manifest Branch: ${{ github.event.inputs.MANIFEST_BRANCH }}"
        echo "Device Tree URL: ${{ github.event.inputs.DEVICE_TREE_URL }}"
        echo "Device Tree Branch: ${{ github.event.inputs.DEVICE_TREE_BRANCH }}"
        echo "Device Path: ${{ github.event.inputs.DEVICE_PATH }}"
        echo "Device Name: ${{ github.event.inputs.DEVICE_NAME }}"
        echo "Makefile Name: ${{ github.event.inputs.MAKEFILE_NAME }}"
        echo "Build Target: ${{ github.event.inputs.BUILD_TARGET }}.img"
        echo "::endgroup::"

    - name: Check Out
      uses: actions/checkout@v4

    # Removed the external 'slimhub_actions' cleanup step because it expects host utilities (sudo, docker, parallel, etc.)
    # which cause noisy errors inside the job container. Keeping the environment minimal and explicit instead.

    - name: Prepare the environment (install packages + CA certs + ssh)
      run: |
        set -euo pipefail
        apt-get update
        apt-get install -y --no-install-recommends ca-certificates apt-transport-https gnupg

        update-ca-certificates || true

        DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends \
            git curl unzip python2 python3 python3-distutils wget rsync \
            build-essential bison flex libncurses5-dev lib32z1 \
            zlib1g-dev bc ccache make gcc-multilib g++-multilib \
            lib32readline-dev lib32z1-dev liblz4-tool libncurses5-dev \
            libsdl1.2-dev libxml2 xsltproc lzop pngcrush schedtool \
            squashfs-tools imagemagick libbz2-dev lzma ncftp qemu-user-static \
            libstdc++-10-dev tar file openssh-client openjdk-8-jdk

        # ensure `python` points to python2 for legacy tools (if available)
        if command -v python2 >/dev/null 2>&1 && [ ! -e /usr/bin/python ]; then
          ln -sf /usr/bin/python2 /usr/bin/python || true
        fi

    - name: Install Java 8 (Temurin)
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '8'

    - name: Setup SSH Keys (if using SSH URLs)
      if: ${{ startsWith(github.event.inputs.MANIFEST_URL, 'git@github.com') || 
              startsWith(github.event.inputs.DEVICE_TREE_URL, 'git@github.com') ||
      uses: webfactory/ssh-agent@v0.9.0
      with:
        ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

    - name: Install repo
      run: |
        set -euo pipefail
        mkdir -p $HOME/bin
        curl -sSLo $HOME/bin/repo https://storage.googleapis.com/git-repo-downloads/repo
        chmod a+x $HOME/bin/repo
        echo "$HOME/bin" >> $GITHUB_PATH

    - name: Initialize repo
      id: pwd
      run: |
        set -euo pipefail
        mkdir -p workspace
        cd workspace
        echo "workspace-folder=$(pwd)" >> $GITHUB_OUTPUT
        git config --global user.name "github-actions[bot]"
        git config --global user.email "actions@github.com"
        repo init --depth=1 -u "${{ github.event.inputs.MANIFEST_URL }}" -b "${{ github.event.inputs.MANIFEST_BRANCH }}" || \
          repo init --repo-branch=repo-1 -u "${{ github.event.inputs.MANIFEST_URL }}" -b "${{ github.event.inputs.MANIFEST_BRANCH }}"

    - name: Repo Sync
      run: |
        set -euo pipefail
        cd "${{ steps.pwd.outputs.workspace-folder }}"
        repo sync -c --no-clone-bundle --depth=1 -j$(nproc) || repo sync -j2

    - name: Clone device tree
      run: |
        set -euo pipefail
        cd "${{ steps.pwd.outputs.workspace-folder }}"
        git clone --depth 1 -b "${{ github.event.inputs.DEVICE_TREE_BRANCH }}" "${{ github.event.inputs.DEVICE_TREE_URL }}" "${{ github.event.inputs.DEVICE_PATH }}"

    - name: Clone common tree (optional)
      if: ${{ github.event.inputs.COMMON_TREE_URL != '' && github.event.inputs.COMMON_PATH != '' }}
      run: |
        set -euo pipefail
        cd "${{ steps.pwd.outputs.workspace-folder }}"
        # Use COMMON_TREE_BRANCH (fix: previously used DEVICE_TREE_BRANCH by mistake)
        git clone --depth 1 -b "${{ github.event.inputs.COMMON_TREE_BRANCH }}" "${{ github.event.inputs.COMMON_TREE_URL }}" "${{ github.event.inputs.COMMON_PATH }}"

    - name: Sync Device Dependencies (best-effort)
      run: |
        set -euo pipefail
        cd "${{ steps.pwd.outputs.workspace-folder }}"
        if [ -f "${GITHUB_WORKSPACE}/scripts/convert.sh" ]; then
          bash ${GITHUB_WORKSPACE}/scripts/convert.sh "${{ github.event.inputs.DEVICE_PATH }}".dependencies || true
          repo sync -j$(nproc) || true
        else
          echo "No convert.sh found; skipping dependency conversion."
        fi
      continue-on-error: true

    - name: Switch to Python2 (if needed)
      run: |
        set -euo pipefail
        if command -v python2 >/dev/null 2>&1; then
          ln -sf /usr/bin/python2 /usr/bin/python || true
        fi

        # --- Compatibility overrides for legacy Android builds ---
        # Accept OpenJDK 8 as a build Java (matches build/core/main.mk EXPERIMENTAL_USE_JAVA8)
        export EXPERIMENTAL_USE_JAVA8=1 || true
        # Ensure JAVA_HOME points to the system OpenJDK8 (installed earlier)
        export JAVA_HOME=/usr/lib/jvm/java-8-openjdk-amd64 || true
        export PATH="$JAVA_HOME/bin:$PATH" || true
        # Try to set the alternatives to the installed OpenJDK 8 (best-effort)
        if command -v update-alternatives >/dev/null 2>&1; then
          update-alternatives --set java $(readlink -f /usr/bin/java) || true
          update-alternatives --set javac $(readlink -f /usr/bin/javac) || true
        fi
          combos=(
          "${{ github.event.inputs.MAKEFILE_NAME }}-${{ github.event.inputs.DEVICE_NAME }}-eng"
          "${{ github.event.inputs.MAKEFILE_NAME }}_${{ github.event.inputs.DEVICE_NAME }}-eng"
          "${{ github.event.inputs.MAKEFILE_NAME }}-eng"
          "${{ github.event.inputs.DEVICE_NAME }}-eng"
        )
        LUNCH_OK=0
        for c in "${combos[@]}"; do
          echo "Trying lunch: $c"
          if lunch "$c" 2>/dev/null; then
            echo "lunch succeeded: $c"
            LUNCH_OK=1
            break
          else
            echo "lunch failed: $c"
          fi
        done

        if [ "$LUNCH_OK" -ne 1 ]; then
          echo "No valid lunch combo found; continuing with make (some builds can succeed without explicit lunch)."
        fi

        make clean || true

        # Build recovery image (try parallel then single-thread fallback)
        if ! make "${{ github.event.inputs.BUILD_TARGET }}"image -j$(nproc); then
          echo "Parallel build failed â€” retrying single-threaded"
          make -j1 "${{ github.event.inputs.BUILD_TARGET }}"image || true
        fi

    - name: Upload to Release
      uses: softprops/action-gh-release@v2
      with:
        files: | 
          workspace/out/target/product/${{ github.event.inputs.DEVICE_NAME }}/${{ github.event.inputs.BUILD_TARGET }}.img
          workspace/out/target/product/${{ github.event.inputs.DEVICE_NAME }}/*.zip
          workspace/out/target/product/${{ github.event.inputs.DEVICE_NAME }}/*vendor*.img
        name: ${{ github.event.inputs.DEVICE_NAME }}-${{ github.run_id }}
        tag_name: ${{ github.run_id }}
        body: |
          Manifest: ${{ github.event.inputs.MANIFEST_BRANCH }}
          Device: ${{ github.event.inputs.DEVICE_NAME }}
          Target: ${{ github.event.inputs.BUILD_TARGET }}.img
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
